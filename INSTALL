If you are having problems installing the software or want a step-by-
step guide to building and using the Adonthell software, please look
at the NEWBIE file. If you just want the quick-start version of the
install process, here it is.


Requirements:
=============

There are two libraries that Adonthell depends on:

1. Python, version 1.5.2 or later. 
   
   Many Linux distributions (Debian, RedHat, SuSE, etc) include Python, but
a few are still using Python 1.5 (or, worse, 1.4!). You can ckeck your 
version of Python by entering the command:

       python -c 'import sys ; print sys.version'

   You can download Python directly from http://www.python.org.


2. The Simple Directmedia Layer (SDL) library, version 1.0 or later.

   See http://www.libsdl.org/


For convenience, the SDL_mixer library is included into the sources.
You'll need OggVorbis if you want to enjoy the music.

   See http://www.xiph.org/ogg/vorbis/download/


Installing:
===========

In the toplevel adonthell-0.3 directory type

$>./configure
$>make

and (as root)

$>make install

For more information, see the README file. Problems? Don't have
the right libraries? Please look at the NEWBIE file or our website
for answers:

    http://adonthell.linuxgames.com


Advanced configure options:
===========================

There are a number of options to 'configure' that might be useful
for you. For a complete list, run 'configure --help'.

--disable-sdltest
--disable-vorbistest
--disable-gtktest

  If configure claims to not find the SDL library, OggVorbis or
GTK+ although they are there, or if you try to cross-compile, 
you can disable the test. 

Another way to workaround such a problem might be to recreate 
'configure' by running the 'autogen.sh' script.


--with-<x>-prefix=PFX

  This allows you to specify the path to various libraries. (replace
the <x> with the name of the library.) This is useful if you have 
installed those libraries in unusual locations, although it might be
better to set the $LD_LIBRARY_PATH environment variable, or to add
those directories to /etc/ld.so.conf.


--enable-tools

  Use this to build the Adonthell development tools. These include
editors for our graphic objects, characters, maps, dialogues and a
few other utilities. Be carefull that these tools will be installed
at 'make install' time. This isn't a good option for the average
player. Really.


--enable-doc

  Use this to build the Adonthell source code documentation. For 
this to work you will need two additional tools: doxygen and dot.
See http://www.doxygen.org for the first. Latter is a part of
AT&T's graphviz toolkit which can be found at
http://www.research.att.com/sw/tools/graphviz/.
  The documentation will end up in doc/html/ respectively
doc/latex/. It is also made available for online browsing at 
our website, http://adonthell.linuxgames.com.


--enable-memleaks

  This enables support for mtrace, a tool to find memory leaks.
After compiling you have to set the $MALLOC_TRACE environment 
variable to any file. Running Adonthell will record debugging
information in this file. Use 'mtrace adonthell $MALLOC_TRACE'
to finally display any occurrence of memory leaks.


*********************************************************************
* That's it! Enjoy the game engine and let us know what you think!! *
*********************************************************************
					- The Adonthell Team


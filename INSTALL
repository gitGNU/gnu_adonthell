If you are having problems installing the software or want a step-by-
step guide to building and using the Adonthell software, please look
at the NEWBIE file. If you just want the quick-start version of the
install process, here it is.


Requirements:
=============

There are two libraries that Adonthell depends on:

1. Python, version 1.5.2 or later. 
   
   Many Linux distributions (Debian, RedHat, SuSE, etc) include Python, but
a few are still using Python 1.5 (or, worse, 1.4!). You can ckeck your 
version of Python by entering the command:

       python -c 'import sys ; print sys.version'

   You can download Python directly from http://www.python.org.


2. The Simple Directmedia Layer (SDL) library, version 1.0 or later.

   See http://www.libsdl.org/


For sound support, you'll also need the SDL_mixer library, Version 1.0 
or later and OggVorbis.

   See http://www.libsdl.org/projects/SDL_mixer/
   and http://www.xiph.org/ogg/vorbis/download/


Installing:
===========

In the toplevel adonthell-0.3 directory type

./configure
make


The first time you run Adonthell, a configuration file is created:
$HOME/.adonthell/adonthellrc. Unless you install the data package in
/usr/local/share/adonthell/ you'll have to add the full path to the
data directory manually. Various other aspects of the game are also
controlled via this file. 

For more information, see the README file. Problems? Don't have
the right libraries? Please look at the NEWBIE file or our website
for answers:

    http://adonthell.linuxgames.com


Advanced configure options:
===========================

There are a number of options to 'configure' that might be useful
for you. For a complete list, run 'configure --help'.

--disable-sdltest
--disable-vorbistest
--disable-gtktest

  If configure claims to not find the SDL library, OggVorbis or
GTK+ although they are there, you can try to disable the test. 

Another way to workaround such a problem might be to recreate 
'configure' by running the 'autogen.sh' script.


--with-<x>-prefix=PFX

  This allows you to specify the path to various libraries. (replace
the <x> with the name of the library.) This is useful if you have 
installed those libraries in unusual locations, although it might be
better to set the $LD_LIBRARY_PATH environment variable, or to add
those directories to /etc/ld.so.conf.


--enable-tools

  Use this to build the Adonthell development tools. These include
editors for our graphic objects, characters, maps, dialogues and a
few other utilities.


--enable-memleaks

  This enables support for mtrace, a tool to find memory leaks.
After compiling you have to set the $MALLOC_TRACE environment 
variable to any file. Running Adonthell will record debugging
information in this file. Use 'mtrace adonthell $MALLOC_TRACE'
to finally display any occurrence of memory leaks.


*********************************************************************
* That's it! Enjoy the game engine and let us know what you think!! *
*********************************************************************
					- The Adonthell Team

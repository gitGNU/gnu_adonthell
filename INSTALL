If you are having problems installing the software or want a step-by-
step guide to building and using the Adonthell software, please look
at the NEWBIE file. If you just want the quick-start version of the
install process, here it is.

Should you still have problems, please visit our tech support at
http://savannah.gnu.org/support/?group_id=702 .


Requirements:
=============

There are three libraries that Adonthell depends on:

1. Python, version 1.5.2 or later. 
   
   Many Linux distributions (Debian, RedHat, SuSE, etc) include Python, but
a few are still using Python 1.5 (or, worse, 1.4!). You can check your 
version of Python by entering the command:

       python -c 'import sys ; print sys.version'

   You can download Python directly from http://www.python.org.


2. The Simple Direct media Layer (SDL) library, version 1.2 or later.

   See http://www.libsdl.org/


3. Freetype version 2

   See http://www.freetype.org


For convenience, the SDL_mixer library is included with the source code;
it will be replaced by a custom mixer anyway. However, you'll need OggVorbis
1.0rc1 or later to enjoy the music.

   See http://www.xiph.org/ogg/vorbis/download/


Installing:
===========

From source:
------------

In the toplevel adonthell-0.3 directory type

$> ./configure
$> make

and (as root)

$> make install

For more information, see the README file. Problems? Don't have
the right libraries? Please look at the NEWBIE file or our website
for answers:

   http://adonthell.linuxgames.com


Debian users:
-------------

You can automatically get an installable Debian package by typing
'debuild', which comes in the 'devscripts' package. Check carefully
that you have the python2.1, python2.1-dev, libsdl1.2 and
libsdl1.2-dev packages installed (plus libvorbis0 & libvorbis-dev if
you want sound), or the build will fail.


Advanced configure options:
===========================

There are a number of options to 'configure' that might be useful
for you. For a complete list, run 'configure --help'.


--with-included-gettext

  If you want to build Adonthell with national language support (NLS),
you'll have to use this option on systems that do not provide the
required services themselves.


--disable-nls

  Use this option to disable NLS completely. For more information
regarding this and the previous option, read the ABOUT-NLS file in
this directory.
  

--disable-sdltest
--disable-vorbistest
--disable-gtktest

  If configure claims to not find the SDL library, OggVorbis or
GTK+ although they are there, or if you try to cross-compile, 
you can disable the test. 

Another way to workaround such a problem might be to recreate 
'configure' by running the 'autogen.sh' script.


--with-<x>-prefix=PFX

  This allows you to specify the path to various libraries. (replace
the <x> with the name of the library.) This is useful if you have 
installed those libraries in unusual locations, although it might be
better to set the $LD_LIBRARY_PATH environment variable, or to add
those directories to /etc/ld.so.conf.


--with-dir=DIR

  Use this option to customise the location of the data directory.
The default is /usr/local/share/adonthell. Once you have compiled
Adonthell you can query the data directory with 'adonthell -d'.


--enable-tools

  Use this to build the Adonthell development tools. These include
editors for our graphic objects, characters, maps, dialogues and a
few other utilities. Note that non of these tools will be installed
when running 'make install'. You will have to run them from their
source directory or install them manually.


--enable-doc

  Use this to build the Adonthell source code documentation. For 
this to work you will need two additional tools: doxygen and dot.

   See http://www.doxygen.org 

for the first. Latter is a part of AT&T's graphviz toolkit which
can be found at

   http://www.research.att.com/sw/tools/graphviz/.

  The documentation will end up in doc/<subdir>/html/ respectively
doc/<subdir>/latex/, where subdir is one of devel or dlgedit.  It 
is also made available for online browsing at our website,
http://adonthell.linuxgames.com.


--enable-memleaks

  This enables support for mtrace, a tool to find memory leaks.
After compiling you have to set the $MALLOC_TRACE environment 
variable to any file. Running Adonthell will record debugging
information in this file. Use 'mtrace adonthell $MALLOC_TRACE'
to finally display any occurrence of memory leaks.
  A much more convenient way to check for memory leaks is the
'memprof' tool: http://people.redhat.com/~otaylor/memprof


--enable-py-debug

  This option turns on debugging output of the embedded python
interpreter to locate bugs in our python scripts. If Adonthell
behaves odd or hangs with no apparent error message, turning
on Python debugging might reveal the source of error. You
shouldn't enable this option unless you need it, since it
increases CPU usage considerably on older machines. 


*********************************************************************
* That's it! Enjoy the game engine and let us know what you think!! *
*********************************************************************
					- The Adonthell Team

